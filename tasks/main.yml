---

- name: Load defaults based on OS type
  ansible.builtin.include_tasks:
    file: vars.yml

- name: Install nginx packages
  ansible.builtin.package:
    name: "{{ nginx_packages }}"
    state: present

- name: Install nginx pip packages
  ansible.builtin.pip:
    name: "{{ nginx_pip_packages }}"
    state: present

- name: Create default server configuration
  ansible.builtin.template:
    src: default.conf.j2
    dest: "{{ nginx_confd_path }}/default.conf"
    owner: root
    group: root
    mode: "0644"
    force: false
  notify: Restart nginx
  when:
    - ansible_os_family == 'Debian'
    - nginx_default_server | bool

- name: Ensure certs directory exists
  ansible.builtin.file:
    path: "{{ nginx_certs_path }}"
    state: directory
    owner: root
    group: root
    mode: "0750"

- name: Create all vhosts
  ansible.builtin.include_tasks: vhost.yml
  loop: "{{ nginx_confd_templates }}"
  loop_control:
    loop_var: nginx_vhost
  when: nginx_create_vhosts | bool

- name: Let nginx contact network resources
  ansible.posix.seboolean:
    name: "{{ item }}"
    persistent: yes
    state: yes
  loop:
    - httpd_can_network_connect
    - httpd_can_network_relay
  when:
    - ansible_os_family == 'RedHat'
    - ansible_selinux['status'] == 'enabled'

- name: Remove link to 'sites-enabled/default'
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: Restart nginx

- name: Start nginx
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: yes

- name: Configuring firewall for postfix (ports)
  ansible.builtin.include_role:
    name: deitkrachten.firewall
  vars:
    firewall_ports: "{{ nginx_fw_ports }}"
  when: nginx_manage_firewall | bool

- name: Set boolean so we know which webserver is used
  ansible.builtin.set_fact:
    webserver_in_use: nginx
    webserver_service: "{{ nginx_service }}"
    webserver_user: "{{ nginx_user }}"
    webserver_group: "{{ nginx_group }}"
